PART
{
name = WBI_LargeRadiator
module = Part
author = Angel-125

rescaleFactor = 1

MODEL
{
    model = WildBlueIndustries/DSEV/Assets/LargeRadiator
}

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0

TechRequired = nuclearPropulsion
entryCost = 14500
cost = 3000
category = Utility
subcategory = 0
title = Graphene Radiator
manufacturer = Wild Blue Industries
description = Originally created as the world's biggest spatula to cook the world's biggest pancake, its segmented design proved too flimsy to handle the load. But Wild Blue Industries saw its potential as a heat radiator for spacecraft and licensed the design. its cardboard-like construction allows coolant to flow through the hollow spaces. Engineers still insist that the "plasma screen" radiator IS made from cardboard despite proof of its graphene construction materials.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,0,0,1

mass = 0.5
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.3
angularDrag = 2
crashTolerance = 6
breakingForce = 200
breakingTorque = 200
maxTemp = 2400
bulkheadProfiles = srf
thermalMassModifier = 2
emissiveConstant = 0.985
heatConductivity = 0.01

MODULE

{

    name = ModuleRadiator



    animationName = Deploy
    pivotName = sunPivot
    IsBreakable = true
    raycastTransformName = suncatcher
    chargeRate = 0

    //Amount of ElectricCharge per second required to run the radiator.
    //Leave blank or set to zero if you don't want to require electric charge.
    ecRequired = 10.1

    //A value between 0 and 1, specifies how much of the part's

    //maximum temperature may be used by the radiator.

    //Radiator max temp should be below the resource's critical point.

    //Assuming the radiator itself is pretty sturdy and won't melt.

    workingTempFactor = 0.85


    //INPUT_RESOURCE specifies the coolant needed for heat transfer. It is required for active cooling.
    //Active cooling circulates coolant to other parts in the vessel to cool them down.
    //Without active cooling, parts must rely on the parts they're attached to,
    //their own mass, and the environment to cool down.
    //You can use whatever resource you want for coolant. Some resources are better than others.
    INPUT_RESOURCE
    {
        name = Coolant

        flowMode = NO_FLOW

        ratio = 1.0

    }




    //Radiators support two types of cooling: closed-cycle, and open-cycle.

    //Closed-cycle keeps circulating coolant within the vessel, and it may take awhile

    //for the vessel to cool down. Open-cycle cooling sheds heat more quickly,

    //but at the expense of coolant (the resources specified by INPUT_RESOURCE).
    //This value specifies the number of units per second to dump overboard.
    //Each INPUT_RESOURCE above will be dumped according to their ratio.

    //If you don't want open-cycle cooling, then don't include this field or set it to 0.
    coolantDumpRate = 66.67

    //Specifies the coolant loss rate.
    //The first number represents the number of units per second that is lost
    //in general. The second number is the number of units lost per g of acceleration.
    //That second number is particularly useful for liquid droplet radiators.
    //Uncomment this line if you want coolant loss.
    //coolantLossRate = 0,1.0
}

RESOURCE
{
    name = Coolant
    amount = 4000
    maxAmount = 4000
}

}
