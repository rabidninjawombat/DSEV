Engines
- Added the ArcJet Engine Cluster, a 0.625m engine that can be stacked or radially attached. It needs 600EC/sec, so be sure to equip you craft with adequate electrical generation.

- Redesigned the heat management system; you still get the nice glowing panels, and without enough of them your engines and reactors shut down.

- Textures are now saved in DDS format to improve load times.



externalTemperature (Temp Ext): the ambient temperatue
thermalMass: (dryMass * standardSpecificHeatCapacity *thermalMassModifier) + (resourceMass * hsp)


physics.cfg
partEmissivityExponent = 4
radiationFactor = 1
convectionFactor = 40
newtonianConvectionFactorBase = 1
newtonianConvectionFactorTotal = 1
conductionFactor = 10
internalHeatProductionFactor = 0.03
aerodynamicHeatProductionFactor = 1
standardSpecificHeatCapacity = 800

Red Iron Crown

Thermal mass is the capacity of the part to absorb heat, i.e. the specific heat of the material times the mass of the part. It takes more heat to raise the temperature of a part by a given amount if it has a higher thermal mass. So parts with higher thermal mass change temperature more slowly than those with a lower thermal mass, both upwards and downwards.

Radiative area is the theoretical area that emits or absorbs radiated heat. Parts emit heat when in shadow and absorb it when in sunlight (at least I think this is modelled). Parts with a larger radiative area gain or lose heat faster than those with smaller radiative areas. 

As I understand it:
- All parts has a default specific heat of 800 kJ/tonne-Kelvin defined in Physics.cfg in the root folder (standardSpecificHeatCapacity)
- Parts can have that modified in their cfgs by a multiplier (thermalMassModifier, setting this to 2 would double specific heat)
- Resources also have their own specific heats defined in ResourcesGeneric.cfg in Gamedata/Squad/Resources (hsp)
- Part thermal mass thus should be (dryMass * standardSpecificHeatCapacity *thermalMassModifier) + (resourceMass * hsp) <- Repeat last section for each resource within the part. Units are kJ/K.

Have a poke around the Physics.cfg file in the root of your KSP install, there's some interesting stuff in there. 

Large Radiator mass: 0.5t
standardSHC: 800
thermalMassModifier: 10
thermalMass: 0.5 * 800 * 10 = 4000
Temperature increase = heat (watts) / thermalMass

radiator extended has larger radiative flux

public double heatConductivity;
public double heatConvectiveConstant;
public double radiativeArea;
public double resourceThermalMass;
public double temperature;


These three parameters are the heat transfer, in kilowatts, of the part, into the environment. Negative values must mean that heat is going out of the part.
thermalConductionFlux;
thermalConvectionFlux;
thermalRadiationFlux;

These parameters are the kilowatts of heat transfer that goes between parts.
thermalInternalFlux;
thermalInternalFluxPrevious;

Thermal mass of the part:
thermalMass: (dryMass * standardSpecificHeatCapacity *thermalMassModifier) + (resourceMass * hsp) //Resource thermal mass calculated for each resource. Possibly already done with resourceThermalMass. Thanks Red Iron Crown!

For my radiator with thermalMassModifier = 4.475 and dryMass = 0.5### and no resources:
thermalMass = 0.5 tonnes * 800 * 4.475 = 1,790 KJ/K (confirmed in game)
I based my thermalMassModifier on lithium's specific heat capacity of 3.58 KJ/Kg-K (3850 KJ/tonne-K)
### I suppose I could also have 0.5tonnes of lithium as a coolant resource, brilliantly named Coolant.
NOTE: If I have a Coolant resource, then I now have a way to sacrifice Coolant for a quick heat dump.

So, thermal energy = thermalMass (KJ/K) * temperature (K)
If my radiator is at 1000 K, then my thermal energy = 1790 * 1000 = 1,790,000 KJ
If my radiator's maximum temperature is 2400K, and we have a "working temperature" of 0.85 of that, then the maximum thermal energy that the radiator can take on is:
2400 * 0.85 * 1790 = 3,651,600 KJ


These are in kilowatts (kJ/sec)
NathanKell
//negative values indicate heat is going out of the part and into the environment.
public double thermalConductionFlux;
public double thermalConvectionFlux;
public double thermalRadiationFlux;
public double thermalInternalFlux;
public double thermalInternalFluxPrevious;

public double thermalMass; //Kj/K
public double thermalMassModifier;
public double thermalMassReciprocal;

heat capacity: Joules/Kelvin


 public void AddThermalFlux(double kilowatts);


Copied from other things I said recently:
heatProduction is now scaled by the part's thermal mass (as well as the internal generation factor). So assuming the latter is 1 (it's not, it's something like 0.03) then heatProduction=1 literally means "this engine produces enough heat per second to raise its temperature 1 K per second".
Yet increasing 0.02t of mass 1K means waaaaay less energy than increasing 6t of Mainsail. And that heat (the energy, not the temperature) conducts outward.

emissiveConstant is the emissivity factor in the black-body radiation equation (flux in W = Stefan-Boltzmann constant * emissivity * area * temperatureK^4). It most certainly cannot be >1 (1 is a perfect black body).
.95 is the "poor man's heat shield"--non-ablatively shielded parts, like spaceplane wings, have that, that means they radiate away heat very fast, comparatively. Default is 0.4, which is gray. Note that solar absorption appears to equal emissivity (this is why solar panels take in lots of heat from the topside as well as radiating from the underside).

heatConductivity is per unit area of connection (connection area = the minimum of the facing area of the two parts).

There's also a heatConvectiveConstant (in Part) although I don't think anything uses it yet. It defaults to 1.0. You can raise it to increase that part's convection rate, or lower it to lower it. 

Good stuff! Here's a bit more.

Copied from other things I said recently:
heatProduction is now scaled by the part's thermal mass (as well as the internal generation factor). So assuming the latter is 1 (it's not, it's something like 0.03) then heatProduction=1 literally means "this engine produces enough heat per second to raise its temperature 1 K per second".
Yet increasing 0.02t of mass 1K means waaaaay less energy than increasing 6t of Mainsail. And that heat (the energy, not the temperature) conducts outward.

emissiveConstant is the emissivity factor in the black-body radiation equation (flux in W = Stefan-Boltzmann constant * emissivity * area * temperatureK^4). It most certainly cannot be >1 (1 is a perfect black body).
.95 is the "poor man's heat shield"--non-ablatively shielded parts, like spaceplane wings, have that, that means they radiate away heat very fast, comparatively. Default is 0.4, which is gray. Note that solar absorption appears to equal emissivity (this is why solar panels take in lots of heat from the topside as well as radiating from the underside).

heatConductivity is per unit area of connection (connection area = the minimum of the facing area of the two parts).

There's also a heatConvectiveConstant (in Part) although I don't think anything uses it yet. It defaults to 1.0. You can raise it to increase that part's convection rate, or lower it to lower it


Heat Simulation:
- Completely revised part heating model, energy flux is considered, not merely temperature.
- All game temperatures changed from ‘Kervin’ to proper Kelvin.
- Radiative, conductive, and convective heating and cooling are simulated.
- Parts can have individual radiative, conductive, and convective properties.
- All parts now emit a blackbody radiation glow if they get hot enough.
- Conduction between attached parts is more accurately modelled.
- Parts can occlude other parts from being exposed to sunlight, celestial body albedo/radiation and supersonic flow.
- Reentry/hypersonic flight heating is now simulated.
- Added difficulty Setting to scale aerodynamic heating.
- Atmospheric temperature, and thus density, takes latitude and sun position into account.
- Celestial bodies accurately emit thermal radiation making nearby craft warmer.
- Service modules, fairings and cargo bays can be used to protect parts inside from heat.
- Heat shields provide (finite) ablation-based protection for parts behind them.


1) Squad maxTemp values:

- Heatshields have 3400
- Pods designed for reentry have 2400. Other pods and cockpits, even the MK3 shuttle cockpit, have 2000 maxTemp.
- Fairings 2400
- Service bays 2600
- Sensitive equipment 1200
   · wheels
   · science
   · radial batteries
   · probecores (exception: inline probes 2000, sphere 1800)
   · unshielded solar panels

- Subsonic plane gears 1000
- Intakes: subsonic 1900, supersonic 2000, hypersonic 2100
- All the engines have 2000 maxTemp (exception: nuclear engine 2500, massive SRBs 2200)
- Everything else 2000 maxTemp (personally I'd tweak down many of those).


1.1) heatProduction of Squad engines does not exceed 300 (Skipper). Mighty Mainsail has 180 heatProuction. If the heatProduction exceeds these values clustered engines start to burn each other. Note: KR-1x2 "Twin-Boar" has 350 heatProuction, but it has 2 engines clustered and embedded into a fuel tank.
SRBs have a heatProduction of 510, thus they're not designed to burn for as long at max thrust.

Physics behind it:
heatProduction is now scaled by the part's thermal mass (as well as the internal generation factor). So assuming the latter is 1 (it's not, it's something like 0.03) then heatProduction=1 literally means "this engine produces enough heat per second to raise its temperature 1 K per second".
Yet increasing 0.02t of mass 1K means waaaaay less energy than increasing 6t of Mainsail. And that heat (the energy, not the temperature) conducts outward. (c) NathanKell

2) A new line emissiveConstant was introduced for heat dissipation and varies between 0.1 and 0.95.
It was given to:
- engines 	0.8
- SRBs 	0.5
- landing legs 	0.8
- solar panels 	0.95
- landing gears 	0.95
- light aero parts
	0.4
- "shielded" aero parts 	0.95
- subsonic intake 	0.55
- supersonic intake 	0.7
- hypersonic intake 	0.95

Physics behind it:
emissiveConstant is the emissivity factor in the black-body radiation equation

flux in W = Stefan-Boltzmann constant * emissivity * area * temperatureK^4.

It most certainly cannot be >1 (1 is a perfect black body).

0.95 is the "poor man's heat shield"--non-ablatively shielded parts, like spaceplane wings, have that, that means they radiate away heat very fast, comparatively. Default is 0.4, which is gray. Note that solar absorption appears to equal emissivity (this is why solar panels take in lots of heat from the topside as well as radiating from the underside). (c) NathanKell

3) Another new parameter thermalMassModifier which defines the speed of heat accumulation in the part. Specific heat capacity. The number in this modifier multiplies the existing capacity of the part.

thermalMass = dryMass * standardSpecificHeatCapacity * thermalMassModifier + resourceMass * hsp

The thermal mass can be shown in part tooltips after checking it in debug toolbar->physics->thermal

It was given to light parts which should withstand heat better:
- solar panels 	2.0
- light aero parts 	3.0
- "shielded" aero parts 	4.0
- intakes 	4.0
- landing legs 	3.0
- landing gears 	4.0
- service bay 	5.0

It was removed from heatshields in favor of Ablator:
- heatshields                   	0.001


4) The last new parameter is heatConductivity which defines how fast the part conducts its temperature between adjacent parts. From 0 to 1 the speed increases. The less the number, the better a part protects adjacent parts from its own heat. Your PC's heatsink probably has around 0.7
heatConductivity increases with the area of connection of two parts, as does in real life.
The default value is 0.12 when this line is missing.
It was given to:
- solar panels 	0.04
- service bays 	0